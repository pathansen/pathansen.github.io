{"version":3,"sources":["components/ProjectModal.module.css","components/About.module.css","components/Project.module.css","components/Projects.module.css","cloud.png","components/About.js","components/ProjectModal.js","components/Project.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","modalBackground","modalForeground","close","closeText","projectTitle","projectDescription","projectFigures","projectNameStyle","repoLinkStyle","aboutHeader","socialLink","projectItem","titleCard","repositoryLink","projectHeader","projectRow","projectColumn","__webpack_require__","p","about","props","react_default","a","createElement","className","classes","style","margin","fontFamily","letterSpacing","marginBottom","fontWeight","href","class","color","ProjectModal","handleKeyUp","event","toggleModal","_this","keyCode","handleClosePress","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","_this$props","this","projectName","projectLanguage","projectRepoLink","onKeyPress","onClick","handleOutsideModal","width","src","alt","React","Component","Project","state","displayModal","toggleModalHandler","updateDisplayModal","setState","thumbnail","components_ProjectModal","backgroundImage","concat","process","Projects","data","componentWillMount","borderColor","paddingLeft","id","map","project","components_Project","App","cloud","About","components_Projects","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cccf2f84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackground\":\"ProjectModal_modalBackground__1zuvk\",\"modalForeground\":\"ProjectModal_modalForeground__1z452\",\"close\":\"ProjectModal_close__Ua3x-\",\"closeText\":\"ProjectModal_closeText__1UF16\",\"projectTitle\":\"ProjectModal_projectTitle__2cFvR\",\"projectDescription\":\"ProjectModal_projectDescription__381AY\",\"projectFigures\":\"ProjectModal_projectFigures__3LzO5\",\"projectNameStyle\":\"ProjectModal_projectNameStyle__1IcBH\",\"repoLinkStyle\":\"ProjectModal_repoLinkStyle__zVAGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutHeader\":\"About_aboutHeader__2EeZG\",\"socialLink\":\"About_socialLink__-2mMf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectItem\":\"Project_projectItem__kM0s8\",\"titleCard\":\"Project_titleCard__3dnF3\",\"repositoryLink\":\"Project_repositoryLink__2b7Sx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectHeader\":\"Projects_projectHeader__1xxew\",\"projectRow\":\"Projects_projectRow__3LLLQ\",\"projectColumn\":\"Projects_projectColumn__3Vwc9\"};","module.exports = __webpack_public_path__ + \"static/media/cloud.2a001038.png\";","import React from 'react';\r\n\r\nimport classes from './About.module.css';\r\n\r\nconst about = (props) => {\r\n  return (\r\n    <div className={classes.aboutHeader}>\r\n      <h1 style={{margin:\"0\", fontFamily:\"Titillium Web\", letterSpacing:\"0.15em\"}}>PATRICK HANSEN</h1>\r\n      <h6 style={{margin:\"0\", marginBottom:\"3%\", fontFamily:\"Titillium Web\"}}>Web Development | Machine Learning | Data Science</h6>\r\n      <h6 style={{fontWeight:\"normal\", margin:\"0\", marginBottom:\"10%\", fontFamily:\"Titillium Web\"}}>\r\n        <span>\r\n          <a className={classes.socialLink} href=\"https://www.linkedin.com/in/pat-hansen/\">\r\n            <i class=\"fa fa-linkedin-square\"></i> LinkedIn\r\n          </a>\r\n        </span>\r\n        <span>\r\n          <a className={classes.socialLink} href=\"https://github.com/pathansen\">\r\n            <span style={{color:\"white\"}}>&nbsp;&nbsp;&bull;&nbsp;&nbsp;</span> <i class=\"fa fa-github-square\"></i> GitHub\r\n          </a>\r\n        </span>\r\n        <span>\r\n          <a className={classes.socialLink} href=\"https://gitlab.com/pathansen\">\r\n          <span style={{color:\"white\"}}>&nbsp;&nbsp;&bull;&nbsp;&nbsp;</span> <i class=\"fa fa-gitlab\"></i> GitLab\r\n          </a>\r\n        </span>\r\n      </h6>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default about;\r\n","import React from 'react';\r\n\r\nimport classes from './ProjectModal.module.css'\r\n\r\nclass ProjectModal extends React.Component {\r\n\r\n  handleKeyUp = (event) => {\r\n    const { toggleModal } = this.props;\r\n    if (event.keyCode === 27) {\r\n      toggleModal();\r\n    }\r\n  }\r\n\r\n  handleClosePress = (event) => {\r\n    const { toggleModal } = this.props;\r\n    toggleModal();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    document.addEventListener('keyup', this.handleKeyUp, false);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    document.removeEventListener('keyup', this.handleKeyUp, false);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { projectName, projectLanguage, projectRepoLink } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={classes.modalBackground}\r\n        onKeyPress={this.handleKeyUp}\r\n        onClick={this.handleOutsideModal}>\r\n\r\n        <div className={classes.modalForeground}>\r\n          <div onClick={this.handleClosePress} className={classes.close}>\r\n            <p className={classes.closeText}>&times;</p>\r\n          </div>\r\n          <div className={classes.projectTitle}>\r\n            <h1 className={classes.projectTitle}>{projectName}</h1>\r\n            <h5 style={{fontWeight:\"normal\", margin:\"0\", marginBottom:\"0.5%\"}}>Written in <b>{projectLanguage}</b></h5>\r\n            <a className={classes.repoLinkStyle} href={projectRepoLink}>\r\n              <h5 style={{fontWeight:\"normal\", margin:\"0\"}}><i class=\"fa fa-github\"></i> Link to Code on GitHub</h5>\r\n            </a>\r\n          </div>\r\n\r\n          <hr style={{width:\"90%\"}} />\r\n\r\n          <div className={classes.projectDescription}>\r\n            <p>Description here...</p>\r\n          </div>\r\n\r\n          <hr style={{width:\"90%\"}} />\r\n\r\n          <div className={classes.projectFigures}>\r\n            <p>Figures here...</p>\r\n            <figure>\r\n              <img\r\n                src={process.env.PUBLIC_URL + '/assets/code.png'}\r\n                alt=\"Something Went Wrong\"\r\n                style={{width:\"80%\"}} />\r\n              <figcaption>Filler text...</figcaption>\r\n            </figure>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProjectModal;\r\n","import React from 'react';\r\n\r\nimport ProjectModal from './ProjectModal'\r\nimport classes from './Project.module.css'\r\n\r\nclass Project extends React.Component {\r\n\r\n  state = {\r\n    displayModal: false\r\n  }\r\n\r\n  toggleModalHandler = () => {\r\n    const updateDisplayModal = !this.state.displayModal;\r\n    this.setState({ displayModal: updateDisplayModal });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { projectName, projectLanguage, projectRepoLink, thumbnail} = this.props;\r\n    const { displayModal } = this.state;\r\n\r\n    return (\r\n      <div>\r\n\r\n        {displayModal &&\r\n          <ProjectModal\r\n            toggleModal={this.toggleModalHandler}\r\n            projectName={projectName}\r\n            projectLanguage={projectLanguage}\r\n            projectRepoLink={projectRepoLink} />\r\n        }\r\n\r\n        <div\r\n          style={{backgroundImage:`url(${process.env.PUBLIC_URL + thumbnail})`}}\r\n          className={classes.projectItem}\r\n          onClick={this.toggleModalHandler}\r\n        >\r\n          <div className={classes.titleCard}>\r\n            <h4 style={{margin:\"0\"}}>{projectName}</h4>\r\n            <h6 style={{margin:\"0\", fontWeight:\"normal\"}}>({projectLanguage})</h6>\r\n          </div>\r\n            <a className={classes.repositoryLink} href={projectRepoLink}>\r\n              <div href={projectRepoLink}>\r\n                <h6 style={{margin:\"0\", fontWeight:\"normal\"}}>\r\n                  <i class=\"fa fa-github\"></i> GitHub Repository\r\n                </h6>\r\n              </div>\r\n            </a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Project;\r\n","import React from 'react';\r\n\r\nimport Project from './Project'\r\nimport classes from './Projects.module.css'\r\n\r\nclass Projects extends React.Component {\r\n\r\n  state = {\r\n    data: []\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    const data = [\r\n      {\r\n        'projectName': 'Portfolio Website',\r\n        'projectLanguage': 'ReactJS',\r\n        'projectRepoLink': 'https://github.com/pathansen/portfolio-source',\r\n        'thumbnail': '/assets/code.png'\r\n      },\r\n      {\r\n        'projectName': 'Project 2',\r\n        'projectLanguage': 'ReactJS',\r\n        'projectRepoLink': 'https://github.com/pathansen/portfolio-source',\r\n        'thumbnail': '/assets/code.png'\r\n      }\r\n    ];\r\n\r\n    this.setState({ data: data });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <div className={classes.projectHeader}>\r\n        <hr style={{width:\"90%\", borderColor:\"rgb(84, 194, 245)\"}} />\r\n        <h1>Projects</h1>\r\n\r\n        <div className=\"responsive-grid\" style={{width:\"95%\", paddingLeft:\"1%\"}}>\r\n          <div className=\"row\" id={classes.projectRow}>\r\n\r\n            {data.map(project => {\r\n              return (\r\n                <div className=\"column\" id={classes.projectColumn}>\r\n                  <Project\r\n                    projectName={project.projectName}\r\n                    projectLanguage={project.projectLanguage}\r\n                    projectRepoLink={project.projectRepoLink}\r\n                    thumbnail={project.thumbnail} />\r\n                </div>\r\n              )\r\n            })}\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport cloud from './cloud.png'\r\nimport './App.css';\r\n\r\nimport About from './components/About'\r\nimport Projects from './components/Projects'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header style={{backgroundImage:`url(${cloud})`}} className=\"App-header\">\r\n\r\n        <About />\r\n\r\n        <Projects />\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}